<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.datai.gift.persist.mapper.GiftAccountMapperExt" >
  <resultMap id="BaseResultMap" type="cn.datai.gift.persist.po.GiftAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="GIFT_ACCOUNT_ID" property="giftAccountId" jdbcType="BIGINT" />
    <result column="COMMODITY_CONTRACT_ID" property="commodityContractId" jdbcType="BIGINT" />
    <result column="LAST_OP_SEQ" property="lastOpSeq" jdbcType="BIGINT" />
    <result column="AVAILABLE_UNIT_QUANTITY" property="availableUnitQuantity" jdbcType="DECIMAL" />
    <result column="FROZEN_UNIT_QUANTITY" property="frozenUnitQuantity" jdbcType="DECIMAL" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="TOTAL_COST_PRICE" property="totalCostPrice" jdbcType="BIGINT" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    GIFT_ACCOUNT_ID as giftAccountId, COMMODITY_CONTRACT_ID as commodityContractId, LAST_OP_SEQ as lastOpSeq, 
    AVAILABLE_UNIT_QUANTITY as availableUnitQuantity, FROZEN_UNIT_QUANTITY as frozenUnitQuantity, 
    TYPE as type, TOTAL_COST_PRICE as totalCostPrice, UPDATE_TIME as updateTime, CREATE_TIME as createTime, 
    REMARK as remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.datai.gift.persist.po.GiftAccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <include refid="Pageable_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from GIFT_ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pageable_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from GIFT_ACCOUNT
    where GIFT_ACCOUNT_ID = #{giftAccountId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from GIFT_ACCOUNT
    where GIFT_ACCOUNT_ID = #{giftAccountId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.datai.gift.persist.po.GiftAccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from GIFT_ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.datai.gift.persist.po.GiftAccount" useGeneratedKeys="true" keyProperty="giftAccountId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into GIFT_ACCOUNT (COMMODITY_CONTRACT_ID, LAST_OP_SEQ, AVAILABLE_UNIT_QUANTITY, 
      FROZEN_UNIT_QUANTITY, TYPE, TOTAL_COST_PRICE, 
      UPDATE_TIME, CREATE_TIME, REMARK
      )
    values (#{commodityContractId,jdbcType=BIGINT}, #{lastOpSeq,jdbcType=BIGINT}, #{availableUnitQuantity,jdbcType=DECIMAL}, 
      #{frozenUnitQuantity,jdbcType=DECIMAL}, #{type,jdbcType=VARCHAR}, #{totalCostPrice,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.datai.gift.persist.po.GiftAccount" useGeneratedKeys="true" keyProperty="giftAccountId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into GIFT_ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commodityContractId != null" >
        COMMODITY_CONTRACT_ID,
      </if>
      <if test="lastOpSeq != null" >
        LAST_OP_SEQ,
      </if>
      <if test="availableUnitQuantity != null" >
        AVAILABLE_UNIT_QUANTITY,
      </if>
      <if test="frozenUnitQuantity != null" >
        FROZEN_UNIT_QUANTITY,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="totalCostPrice != null" >
        TOTAL_COST_PRICE,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commodityContractId != null" >
        #{commodityContractId,jdbcType=BIGINT},
      </if>
      <if test="lastOpSeq != null" >
        #{lastOpSeq,jdbcType=BIGINT},
      </if>
      <if test="availableUnitQuantity != null" >
        #{availableUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="frozenUnitQuantity != null" >
        #{frozenUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="totalCostPrice != null" >
        #{totalCostPrice,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.datai.gift.persist.po.GiftAccountExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from GIFT_ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update GIFT_ACCOUNT
    <set >
      <if test="record.giftAccountId != null" >
        GIFT_ACCOUNT_ID = #{record.giftAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.commodityContractId != null" >
        COMMODITY_CONTRACT_ID = #{record.commodityContractId,jdbcType=BIGINT},
      </if>
      <if test="record.lastOpSeq != null" >
        LAST_OP_SEQ = #{record.lastOpSeq,jdbcType=BIGINT},
      </if>
      <if test="record.availableUnitQuantity != null" >
        AVAILABLE_UNIT_QUANTITY = #{record.availableUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenUnitQuantity != null" >
        FROZEN_UNIT_QUANTITY = #{record.frozenUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.totalCostPrice != null" >
        TOTAL_COST_PRICE = #{record.totalCostPrice,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update GIFT_ACCOUNT
    set GIFT_ACCOUNT_ID = #{record.giftAccountId,jdbcType=BIGINT},
      COMMODITY_CONTRACT_ID = #{record.commodityContractId,jdbcType=BIGINT},
      LAST_OP_SEQ = #{record.lastOpSeq,jdbcType=BIGINT},
      AVAILABLE_UNIT_QUANTITY = #{record.availableUnitQuantity,jdbcType=DECIMAL},
      FROZEN_UNIT_QUANTITY = #{record.frozenUnitQuantity,jdbcType=DECIMAL},
      TYPE = #{record.type,jdbcType=VARCHAR},
      TOTAL_COST_PRICE = #{record.totalCostPrice,jdbcType=BIGINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.datai.gift.persist.po.GiftAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update GIFT_ACCOUNT
    <set >
      <if test="commodityContractId != null" >
        COMMODITY_CONTRACT_ID = #{commodityContractId,jdbcType=BIGINT},
      </if>
      <if test="lastOpSeq != null" >
        LAST_OP_SEQ = #{lastOpSeq,jdbcType=BIGINT},
      </if>
      <if test="availableUnitQuantity != null" >
        AVAILABLE_UNIT_QUANTITY = #{availableUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="frozenUnitQuantity != null" >
        FROZEN_UNIT_QUANTITY = #{frozenUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="totalCostPrice != null" >
        TOTAL_COST_PRICE = #{totalCostPrice,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where GIFT_ACCOUNT_ID = #{giftAccountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.datai.gift.persist.po.GiftAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update GIFT_ACCOUNT
    set COMMODITY_CONTRACT_ID = #{commodityContractId,jdbcType=BIGINT},
      LAST_OP_SEQ = #{lastOpSeq,jdbcType=BIGINT},
      AVAILABLE_UNIT_QUANTITY = #{availableUnitQuantity,jdbcType=DECIMAL},
      FROZEN_UNIT_QUANTITY = #{frozenUnitQuantity,jdbcType=DECIMAL},
      TYPE = #{type,jdbcType=VARCHAR},
      TOTAL_COST_PRICE = #{totalCostPrice,jdbcType=BIGINT},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR}
    where GIFT_ACCOUNT_ID = #{giftAccountId,jdbcType=BIGINT}
  </update>
  <sql id="Pageable_Prefix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      select * from (
    </if>
  </sql>
  <sql id="Pageable_Suffix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      ) pageable_limited limit #{page.begin} , #{page.size}
    </if>
  </sql>
</mapper>