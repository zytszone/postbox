<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.datai.gift.persist.mapper.CommodityFlowRecordMapperExt" >
  <resultMap id="BaseResultMap" type="cn.datai.gift.persist.po.CommodityFlowRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COMMODITY_FLOW_RECORD_ID" property="commodityFlowRecordId" jdbcType="BIGINT" />
    <result column="GIFT_ACCOUNT_ID" property="giftAccountId" jdbcType="BIGINT" />
    <result column="GIFT_ACCOUNT_OP_SEQ" property="giftAccountOpSeq" jdbcType="BIGINT" />
    <result column="OPPONENT_GIFT_ACCOUNT_ID" property="opponentGiftAccountId" jdbcType="BIGINT" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="ALLOT_OR_TRANSFER" property="allotOrTransfer" jdbcType="VARCHAR" />
    <result column="IN_OR_OUT" property="inOrOut" jdbcType="VARCHAR" />
    <result column="FREEZE_OR_UNFREEZE" property="freezeOrUnfreeze" jdbcType="VARCHAR" />
    <result column="BEFORE_UNIT_QUANTITY" property="beforeUnitQuantity" jdbcType="DECIMAL" />
    <result column="TRADE_UNIT_QUANTITY" property="tradeUnitQuantity" jdbcType="DECIMAL" />
    <result column="AFTER_UNIT_QUANTITY" property="afterUnitQuantity" jdbcType="DECIMAL" />
    <result column="UNIT_PRICE" property="unitPrice" jdbcType="BIGINT" />
    <result column="TRADE_TIME" property="tradeTime" jdbcType="TIMESTAMP" />
    <result column="EXTEND_INFO" property="extendInfo" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    COMMODITY_FLOW_RECORD_ID as commodityFlowRecordId, GIFT_ACCOUNT_ID as giftAccountId, 
    GIFT_ACCOUNT_OP_SEQ as giftAccountOpSeq, OPPONENT_GIFT_ACCOUNT_ID as opponentGiftAccountId, 
    TYPE as type, ALLOT_OR_TRANSFER as allotOrTransfer, IN_OR_OUT as inOrOut, FREEZE_OR_UNFREEZE as freezeOrUnfreeze, 
    BEFORE_UNIT_QUANTITY as beforeUnitQuantity, TRADE_UNIT_QUANTITY as tradeUnitQuantity, 
    AFTER_UNIT_QUANTITY as afterUnitQuantity, UNIT_PRICE as unitPrice, TRADE_TIME as tradeTime, 
    EXTEND_INFO as extendInfo, REMARK as remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.datai.gift.persist.po.CommodityFlowRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <include refid="Pageable_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COMMODITY_FLOW_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pageable_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from COMMODITY_FLOW_RECORD
    where COMMODITY_FLOW_RECORD_ID = #{commodityFlowRecordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from COMMODITY_FLOW_RECORD
    where COMMODITY_FLOW_RECORD_ID = #{commodityFlowRecordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.datai.gift.persist.po.CommodityFlowRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from COMMODITY_FLOW_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.datai.gift.persist.po.CommodityFlowRecord" useGeneratedKeys="true" keyProperty="commodityFlowRecordId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into COMMODITY_FLOW_RECORD (GIFT_ACCOUNT_ID, GIFT_ACCOUNT_OP_SEQ, OPPONENT_GIFT_ACCOUNT_ID, 
      TYPE, ALLOT_OR_TRANSFER, IN_OR_OUT, 
      FREEZE_OR_UNFREEZE, BEFORE_UNIT_QUANTITY, TRADE_UNIT_QUANTITY, 
      AFTER_UNIT_QUANTITY, UNIT_PRICE, TRADE_TIME, 
      EXTEND_INFO, REMARK)
    values (#{giftAccountId,jdbcType=BIGINT}, #{giftAccountOpSeq,jdbcType=BIGINT}, #{opponentGiftAccountId,jdbcType=BIGINT}, 
      #{type,jdbcType=VARCHAR}, #{allotOrTransfer,jdbcType=VARCHAR}, #{inOrOut,jdbcType=VARCHAR}, 
      #{freezeOrUnfreeze,jdbcType=VARCHAR}, #{beforeUnitQuantity,jdbcType=DECIMAL}, #{tradeUnitQuantity,jdbcType=DECIMAL}, 
      #{afterUnitQuantity,jdbcType=DECIMAL}, #{unitPrice,jdbcType=BIGINT}, #{tradeTime,jdbcType=TIMESTAMP}, 
      #{extendInfo,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.datai.gift.persist.po.CommodityFlowRecord" useGeneratedKeys="true" keyProperty="commodityFlowRecordId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into COMMODITY_FLOW_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="giftAccountId != null" >
        GIFT_ACCOUNT_ID,
      </if>
      <if test="giftAccountOpSeq != null" >
        GIFT_ACCOUNT_OP_SEQ,
      </if>
      <if test="opponentGiftAccountId != null" >
        OPPONENT_GIFT_ACCOUNT_ID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="allotOrTransfer != null" >
        ALLOT_OR_TRANSFER,
      </if>
      <if test="inOrOut != null" >
        IN_OR_OUT,
      </if>
      <if test="freezeOrUnfreeze != null" >
        FREEZE_OR_UNFREEZE,
      </if>
      <if test="beforeUnitQuantity != null" >
        BEFORE_UNIT_QUANTITY,
      </if>
      <if test="tradeUnitQuantity != null" >
        TRADE_UNIT_QUANTITY,
      </if>
      <if test="afterUnitQuantity != null" >
        AFTER_UNIT_QUANTITY,
      </if>
      <if test="unitPrice != null" >
        UNIT_PRICE,
      </if>
      <if test="tradeTime != null" >
        TRADE_TIME,
      </if>
      <if test="extendInfo != null" >
        EXTEND_INFO,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="giftAccountId != null" >
        #{giftAccountId,jdbcType=BIGINT},
      </if>
      <if test="giftAccountOpSeq != null" >
        #{giftAccountOpSeq,jdbcType=BIGINT},
      </if>
      <if test="opponentGiftAccountId != null" >
        #{opponentGiftAccountId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="allotOrTransfer != null" >
        #{allotOrTransfer,jdbcType=VARCHAR},
      </if>
      <if test="inOrOut != null" >
        #{inOrOut,jdbcType=VARCHAR},
      </if>
      <if test="freezeOrUnfreeze != null" >
        #{freezeOrUnfreeze,jdbcType=VARCHAR},
      </if>
      <if test="beforeUnitQuantity != null" >
        #{beforeUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="tradeUnitQuantity != null" >
        #{tradeUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="afterUnitQuantity != null" >
        #{afterUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=BIGINT},
      </if>
      <if test="tradeTime != null" >
        #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extendInfo != null" >
        #{extendInfo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.datai.gift.persist.po.CommodityFlowRecordExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from COMMODITY_FLOW_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COMMODITY_FLOW_RECORD
    <set >
      <if test="record.commodityFlowRecordId != null" >
        COMMODITY_FLOW_RECORD_ID = #{record.commodityFlowRecordId,jdbcType=BIGINT},
      </if>
      <if test="record.giftAccountId != null" >
        GIFT_ACCOUNT_ID = #{record.giftAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.giftAccountOpSeq != null" >
        GIFT_ACCOUNT_OP_SEQ = #{record.giftAccountOpSeq,jdbcType=BIGINT},
      </if>
      <if test="record.opponentGiftAccountId != null" >
        OPPONENT_GIFT_ACCOUNT_ID = #{record.opponentGiftAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.allotOrTransfer != null" >
        ALLOT_OR_TRANSFER = #{record.allotOrTransfer,jdbcType=VARCHAR},
      </if>
      <if test="record.inOrOut != null" >
        IN_OR_OUT = #{record.inOrOut,jdbcType=VARCHAR},
      </if>
      <if test="record.freezeOrUnfreeze != null" >
        FREEZE_OR_UNFREEZE = #{record.freezeOrUnfreeze,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeUnitQuantity != null" >
        BEFORE_UNIT_QUANTITY = #{record.beforeUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeUnitQuantity != null" >
        TRADE_UNIT_QUANTITY = #{record.tradeUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.afterUnitQuantity != null" >
        AFTER_UNIT_QUANTITY = #{record.afterUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.unitPrice != null" >
        UNIT_PRICE = #{record.unitPrice,jdbcType=BIGINT},
      </if>
      <if test="record.tradeTime != null" >
        TRADE_TIME = #{record.tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extendInfo != null" >
        EXTEND_INFO = #{record.extendInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COMMODITY_FLOW_RECORD
    set COMMODITY_FLOW_RECORD_ID = #{record.commodityFlowRecordId,jdbcType=BIGINT},
      GIFT_ACCOUNT_ID = #{record.giftAccountId,jdbcType=BIGINT},
      GIFT_ACCOUNT_OP_SEQ = #{record.giftAccountOpSeq,jdbcType=BIGINT},
      OPPONENT_GIFT_ACCOUNT_ID = #{record.opponentGiftAccountId,jdbcType=BIGINT},
      TYPE = #{record.type,jdbcType=VARCHAR},
      ALLOT_OR_TRANSFER = #{record.allotOrTransfer,jdbcType=VARCHAR},
      IN_OR_OUT = #{record.inOrOut,jdbcType=VARCHAR},
      FREEZE_OR_UNFREEZE = #{record.freezeOrUnfreeze,jdbcType=VARCHAR},
      BEFORE_UNIT_QUANTITY = #{record.beforeUnitQuantity,jdbcType=DECIMAL},
      TRADE_UNIT_QUANTITY = #{record.tradeUnitQuantity,jdbcType=DECIMAL},
      AFTER_UNIT_QUANTITY = #{record.afterUnitQuantity,jdbcType=DECIMAL},
      UNIT_PRICE = #{record.unitPrice,jdbcType=BIGINT},
      TRADE_TIME = #{record.tradeTime,jdbcType=TIMESTAMP},
      EXTEND_INFO = #{record.extendInfo,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.datai.gift.persist.po.CommodityFlowRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COMMODITY_FLOW_RECORD
    <set >
      <if test="giftAccountId != null" >
        GIFT_ACCOUNT_ID = #{giftAccountId,jdbcType=BIGINT},
      </if>
      <if test="giftAccountOpSeq != null" >
        GIFT_ACCOUNT_OP_SEQ = #{giftAccountOpSeq,jdbcType=BIGINT},
      </if>
      <if test="opponentGiftAccountId != null" >
        OPPONENT_GIFT_ACCOUNT_ID = #{opponentGiftAccountId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="allotOrTransfer != null" >
        ALLOT_OR_TRANSFER = #{allotOrTransfer,jdbcType=VARCHAR},
      </if>
      <if test="inOrOut != null" >
        IN_OR_OUT = #{inOrOut,jdbcType=VARCHAR},
      </if>
      <if test="freezeOrUnfreeze != null" >
        FREEZE_OR_UNFREEZE = #{freezeOrUnfreeze,jdbcType=VARCHAR},
      </if>
      <if test="beforeUnitQuantity != null" >
        BEFORE_UNIT_QUANTITY = #{beforeUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="tradeUnitQuantity != null" >
        TRADE_UNIT_QUANTITY = #{tradeUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="afterUnitQuantity != null" >
        AFTER_UNIT_QUANTITY = #{afterUnitQuantity,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null" >
        UNIT_PRICE = #{unitPrice,jdbcType=BIGINT},
      </if>
      <if test="tradeTime != null" >
        TRADE_TIME = #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extendInfo != null" >
        EXTEND_INFO = #{extendInfo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where COMMODITY_FLOW_RECORD_ID = #{commodityFlowRecordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.datai.gift.persist.po.CommodityFlowRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update COMMODITY_FLOW_RECORD
    set GIFT_ACCOUNT_ID = #{giftAccountId,jdbcType=BIGINT},
      GIFT_ACCOUNT_OP_SEQ = #{giftAccountOpSeq,jdbcType=BIGINT},
      OPPONENT_GIFT_ACCOUNT_ID = #{opponentGiftAccountId,jdbcType=BIGINT},
      TYPE = #{type,jdbcType=VARCHAR},
      ALLOT_OR_TRANSFER = #{allotOrTransfer,jdbcType=VARCHAR},
      IN_OR_OUT = #{inOrOut,jdbcType=VARCHAR},
      FREEZE_OR_UNFREEZE = #{freezeOrUnfreeze,jdbcType=VARCHAR},
      BEFORE_UNIT_QUANTITY = #{beforeUnitQuantity,jdbcType=DECIMAL},
      TRADE_UNIT_QUANTITY = #{tradeUnitQuantity,jdbcType=DECIMAL},
      AFTER_UNIT_QUANTITY = #{afterUnitQuantity,jdbcType=DECIMAL},
      UNIT_PRICE = #{unitPrice,jdbcType=BIGINT},
      TRADE_TIME = #{tradeTime,jdbcType=TIMESTAMP},
      EXTEND_INFO = #{extendInfo,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where COMMODITY_FLOW_RECORD_ID = #{commodityFlowRecordId,jdbcType=BIGINT}
  </update>
  <sql id="Pageable_Prefix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      select * from (
    </if>
  </sql>
  <sql id="Pageable_Suffix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      ) pageable_limited limit #{page.begin} , #{page.size}
    </if>
  </sql>
</mapper>